{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","match","useMatch","className","s","main","navLinks","to","NavLink","active","Navlink","Message","props","c","message","ava","src","avatar","text","name","time","messageData","HW1","Affair","a","affairContainer","affairName","affair","affairPriority","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","afair","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","e","currentTarget","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","u","HW3","v1","setUsers","newUser","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","checked","setChecked","column","blue","disabled","Error404","PreJunior","Routess","path","element","replace","HW5","Routes","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.81f29dbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__2Z_6k\",\"navLinks\":\"Header_navLinks__3tuJq\",\"navLink\":\"Header_navLink__1EbQV\",\"active\":\"Header_active__1vfU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2dsoM\",\"ava\":\"Message_ava__2STpu\",\"text\":\"Message_text__1xB4A\",\"time\":\"Message_time__1Li7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairContainer\":\"Affairs_affairContainer__3ntf7\",\"affairName\":\"Affairs_affairName__lFZbs\",\"affairPriority\":\"Affairs_affairPriority__A-iWT\",\"closeBtn\":\"Affairs_closeBtn__2uqU6\",\"btnContainer\":\"Affairs_btnContainer__2MK_w\",\"btn\":\"Affairs_btn__1haTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__DAlCo\",\"errorInput\":\"SuperInputText_errorInput__3HA36\",\"error\":\"SuperInputText_error__10Sng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3wule\",\"column\":\"HW4_column__3g_bB\",\"testSpanError\":\"HW4_testSpanError__3izHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1CAl2\",\"red\":\"SuperButton_red__29FE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__ldfI6\",\"spanClassName\":\"SuperCheckbox_spanClassName__1wewU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3qFlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__18emK\",\"error\":\"Greeting_error__1TI4l\"};","import React from 'react'\nimport { NavLink, useMatch } from \"react-router-dom\"\nimport s from './Header.module.css'\n\nfunction Header() {\n\n  let match = useMatch('/PRE_JUNIOR')\n  return (\n    <div className={s.main}>\n      \n        <div className={s.navLinks}>\n          <NavLink to={'/'} className={(NavLink) => (match? s.active : s.Navlink) } >Main page</NavLink>\n          <NavLink to={'/hw1'} className={(NavLink) => (match? s.active : s.Navlink) } >Home task 1</NavLink>\n          <NavLink to={'/hw2'} className={(NavLink) => (match? s.active : s.Navlink) }>Home task 2</NavLink>\n          <NavLink to={'/hw3'} className={(NavLink) => (match? s.active : s.Navlink) }>Home task 3</NavLink>\n          <NavLink to={'/hw4'} className={(NavLink) => (match? s.active : s.Navlink) }>Home task 4</NavLink>\n        </div>\n      \n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport c from './Message.module.css'\nimport { messageData } from './HW1'\n\nexport type PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\n\n\nfunction Message(props: PropsType) {\n    return (\n        <div className={c.message}>\n            <div>\n                <img className={c.ava} src={props.avatar} />\n            </div>\n            <div className={c.text}>\n                <div> {props.message} <div />\n                    <div>\n                        {props.name}\n                    </div>\n                    <div className={c.time}>\n                        {props.time}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\nimport PropsType from './Message'\n\n\nexport const messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n            <div>\n                <Message\n                    avatar={messageData.avatar}\n                    name={messageData.name}\n                    message={messageData.message}\n                    time={messageData.time}\n                />\n\n            </div>\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2'\nimport a from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n<div className={a.affairContainer}>\n                <div className={a.affairName}> {props.affair.name} </div>\n                <div className={a.affairPriority}>{props.affair.priority}</div>\n                <button onClick={deleteCallback}>X</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affair\n\n\n\n\n                {/* <div>{props.affair.name}</div>\n            <div >{props.affair.priority}</div>\n            <button onClick={deleteCallback}>X</button> */}","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n    \n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => { \n        props.setFilter('middle')}\n\n    const setLow = () => { \n        props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} >All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = {\n    priority: 'high'| 'low'| 'middle'\n}\nexport type AffairType =  {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = 'all' | 'high'| 'low'| 'middle'\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ \n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else return affairs // fixed\n    // else return // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(afair=>afair._id !== _id)\n    // need to fix any\n    // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent } from 'react'\nimport s from './Greeting.module.css'\nimport { UserType } from './HW3'\n\ntype GreetingPropsType = {\n    name: string// need to fix any ////////////////////\n    setNameCallback: (name: string) => void// need to fix any\n    addUser: (name: string) => void // need to fix any\n    error: string // need to fix any !!!!!!!!!!!!!!??????????\n    totalUsers: number // need to fix any\n\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\n) => {\n    const inputClass = s.error? error : \"\" // need to fix with (?:) I fixed it BAD\n\n    const inputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setNameCallback(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            <input value={name} onChange={inputChange} className={inputClass} />\n            <span>{error}</span>\n            <button onClick={() => addUser(name)}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any /////////////////////////////////\n    addUserCallback: (name: string) => void // need to fix any /////////////////////////////\n}\n\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback, }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\") // need to fix any\n    const [error, setError] = useState<string>(\"\") // need to fix any\n\n\n\n    const setNameCallback = (value: string) => { // need to fix any\n        setError('')\n        setName(value) // need to fix\n\n    }\n    const addUser = (name: string) => {\n        if(name.trim() != \"\"){\n            addUserCallback(name)\n            setName('')\n            alert(`${\"Hello \"}${name}${\"!\"}`) // need to fix ???????????????????\n        }else {\n            setError('Icorrect value') \n        }\n    }\n\n    const totalUsers = users.length// need to fix\n\n    return (<>\n\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n        {users.map(u => <div> {u.name}</div>)}\n    </>\n    )\n}\n\nexport default GreetingContainer\n","import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any ///////////////////\n    name: string // need to fix any //////////////////\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([  /////////////НЕ ПОЧИНИЛ\n        { _id: v1(), name: 'first basic user' },\n    ]) // need to fix any ////////////////\n\n    const addUserCallback = (name: string) => { // need to fix any ////////////\n        let user = { _id: v1(), name: name };\n        let newUser = [user, ...users]\n        setUsers(newUser) // need to fix ///////////\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? s.superInput : ''}` // need to fix with (?:) \n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n         && onChange(e) // сделайте так чтоб работал onChange и onChangeChecked\n         \n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1 />\n            <HW2 />\n            <HW3 />\n            <HW4 />\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport { Route, Navigate, BrowserRouter, HashRouter, Routes } from \"react-router-dom\";\nimport HW1 from '../h1/HW1'\nimport HW2 from '../h2/HW2'\nimport HW3 from '../h3/HW3'\nimport HW4 from '../h4/HW4'\nimport Error404 from './pages/Error404';\nimport PreJunior from './pages/PreJunior';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    HW1: \"/hw1\",\n    HW2: \"/hw2\",\n    HW3: \"/hw3\",\n    HW4: \"/hw4\",\n}\n\nfunction Routess() {\n    return (\n        <div>\n\n            <Routes>\n                <Route path=\"/\" element={<Navigate replace to=\"/PRE_JUNIOR\" />} />\n                <Route path=\"/PRE_JUNIOR\" element={<PreJunior />} />\n                <Route path=\"/hw1\" element={<HW1 />} />\n                <Route path=\"/hw2\" element={<HW2 />} />\n                <Route path=\"/hw3\" element={<HW3 />} />\n                <Route path=\"/hw4\" element={<HW4 />} />\n                <Route element={<Error404 />} />\n            </Routes>\n\n        </div>\n    )\n}\n\nexport default Routess\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routess from './Routes'\n\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header />\n                <Routess />\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from '../../../p2-homeworks/h5/HW5'\nimport HW6 from '../../../p2-homeworks/h6/HW6'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5 />\n            <HW6 />\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}